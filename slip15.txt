Q.1
A) Write an Android code to merge given two Array/List
List 1
List 2
List 3
Merge
[10]

SOLUTION:

import java.util.ArrayList;
import java.util.List;

public class MergeListsExample {

    public static void main(String[] args) {
        List<String> list1 = new ArrayList<>();
        list1.add("Item 1");
        list1.add("Item 2");
        list1.add("Item 3");

        List<String> list2 = new ArrayList<>();
        list2.add("Item 4");
        list2.add("Item 5");
        list2.add("Item 6");

        List<String> mergedList = mergeLists(list1, list2);

        // Print the merged list
        for (String item : mergedList) {
            System.out.println(item);
        }
    }

    private static <T> List<T> mergeLists(List<T> list1, List<T> list2) {
        List<T> mergedList = new ArrayList<>();

        // Add all items from list1
        mergedList.addAll(list1);

        // Add all items from list2
        mergedList.addAll(list2);

        return mergedList;
    }
}

B) Write an Android Application to send Email.

SOLUTION:

Activity.java :
package com.example.slip15_2;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.content.Intent;
import android.net.Uri;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
private EditText recipientEditText;
private EditText subjectEditText;
private EditText messageEditText;
private Button sendButton;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
recipientEditText = findViewById(R.id.recipientEditText);
subjectEditText = findViewById(R.id.subjectEditText);
messageEditText = findViewById(R.id.messageEditText);
sendButton = findViewById(R.id.sendButton);
sendButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
String recipient =
recipientEditText.getText().toString().trim();
String subject =
subjectEditText.getText().toString().trim();
String message =
messageEditText.getText().toString().trim();
if (recipient.isEmpty()) {
Toast.makeText(MainActivity.this, "Please enter a
recipient email address", Toast.LENGTH_SHORT).show();
} else {
Intent intent = new Intent(Intent.ACTION_SENDTO);
intent.setData(Uri.parse("mailto:"));
intent.putExtra(Intent.EXTRA_EMAIL, new
String[]{recipient});
intent.putExtra(Intent.EXTRA_SUBJECT, subject);
intent.putExtra(Intent.EXTRA_TEXT, message);
if (intent.resolveActivity(getPackageManager()) !=
null) {
startActivity(intent);
} else {
Toast.makeText(MainActivity.this, "No email app
installed", Toast.LENGTH_SHORT).show();
}
}
}
});
}
}
Activity.xml :
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools">
<application
android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules"
android:fullBackupContent="@xml/backup_rules"
android:icon="@mipmap/ic_launcher"
android:label="@string/app_name"
android:supportsRtl="true"
android:theme="@style/Theme.Slip15_2"
tools:targetApi="31">
<activity
android:name=".MainActivity"
android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNCHER"
/>
</intent-filter>
</activity>
</application>
</manifest>

Q.2 A) Write a C program to Identify the type (Directory, character device, Block device, Regular file, FIFO
or pipe, symbolic link or socket) of given file using stat() system call.
[10]

SOLUTION:

#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>

int main() {
    char filename[100];

    printf("Enter the filename: ");
    scanf("%s", filename);

    struct stat fileStat;

    // Use stat() system call to get file information
    if (stat(filename, &fileStat) == -1) {
        perror("Error");
        return -1;
    }

    // Check the file type using the st_mode field of the stat structure
    if (S_ISREG(fileStat.st_mode)) {
        printf("Regular file\n");
    } else if (S_ISDIR(fileStat.st_mode)) {
        printf("Directory\n");
    } else if (S_ISCHR(fileStat.st_mode)) {
        printf("Character device\n");
    } else if (S_ISBLK(fileStat.st_mode)) {
        printf("Block device\n");
    } else if (S_ISFIFO(fileStat.st_mode)) {
        printf("FIFO or pipe\n");
    } else if (S_ISLNK(fileStat.st_mode)) {
        printf("Symbolic link\n");
    } else if (S_ISSOCK(fileStat.st_mode)) {
        printf("Socket\n");
    } else {
        printf("Unknown file type\n");
    }

    return 0;
}

B) Write a C program which creates a child process and child process catches a signal SIGHUP,
SIGINT and SIGQUIT. The Parent process send a SIGHUP or SIGINT signal after every 3 seconds, at
the end of 15 second parent send SIGQUIT signal to child and child terminates by displaying message
"My Papa has Killed me!!!‚Äù.
[20]

Soln:
#include<stdio.h>
#include<signal.h>
#include<stdlib.h>
void sighup();
void sigint();
void sigquit();
main()
{
int pid,i,j,k;
if ((pid = fork() ) < 0)
{
perror("fork");
exit(1);
}
if ( pid == 0)
{
signal(SIGHUP,sighup);
signal(SIGINT,sigint);
signal(SIGQUIT,sigquit);
for(;;);
}
else
{
j=0;
for(i=1;i<=5;i++)
{
j++;
printf("PARENT: sending SIGHUP Signal  :   %d\n",j);
kill(pid,SIGHUP);
sleep(3);
printf("PARENT: sending  signal : %d\n",j);
kill (pid,SIGINT);
sleep(3);
}
sleep(3);
printf("Parent sending SIGQUIT\n");
kill(pid,SIGQUIT);
}
}
void sighup()
{
signal(SIGHUP,sighup);
printf("Child: I have received  sighup\n");
}
void sigint()
{
signal(SIGINT,sigint);
printf("Child: I have received sighINT\n");
}
void sigquit()
{
printf("My daddy has killed me\n");
exit(0);
}

Write a C program to display all the files from current directory which are created in a particular month.
Soln:
#include<stdio.h>
#include<dirent.h>
#include<string.h>
#include<sys/stat.h>
#include<time.h>
#include<stdlib.h>
int main(intargc, char *argv[])
{
char in[100],st[100],*ch,*ch1,c,buff[512];
DIR *dp;
int i;
structdirent *ep;
struct stat sb;
charmon[100];
dp=opendir("./");
if (dp != NULL)
{
while(ep =readdir(dp))
{
if(stat(ep->d_name,&sb) == -1)
{
perror("stat");
exit(EXIT_SUCCESS);
}
strcpy(mon,ctime(&sb.st_ctime));
ch=strtok(mon," ");
ch=strtok(NULL,",");
ch1=strtok(ch," ");
if((strcmp(ch1,argv[1]))==0)
{
printf("%s\t\t%s",ep->d_name,ctime(&sb.st_ctime));
}
}
(void)closedir(dp);
}
return 0;
}