A) Create an Android Application to accept two numbers and create two buttons (power and Average).
Display the result on the next activity on Button click
[10]

SOLUTION:

activity_main.xml
<LinearLayout
    ...
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    ...>

    <EditText
        android:id="@+id/editTextNumber1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter number 1"
        android:inputType="number"/>

    <EditText
        android:id="@+id/editTextNumber2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter number 2"
        android:inputType="number"/>

    <Button
        android:id="@+id/buttonPower"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Power"/>

    <Button
        android:id="@+id/buttonAverage"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Average"/>
</LinearLayout>

Mainactivity.java

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private EditText editTextNumber1;
    private EditText editTextNumber2;
    private Button buttonPower;
    private Button buttonAverage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        editTextNumber1 = findViewById(R.id.editTextNumber1);
        editTextNumber2 = findViewById(R.id.editTextNumber2);
        buttonPower = findViewById(R.id.buttonPower);
        buttonAverage = findViewById(R.id.buttonAverage);

        buttonPower.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                double number1 = Double.parseDouble(editTextNumber1.getText().toString());
                double number2 = Double.parseDouble(editTextNumber2.getText().toString());

                double result = Math.pow(number1, number2);

                Intent intent = new Intent(MainActivity.this, ResultActivity.class);
                intent.putExtra("result", result);
                startActivity(intent);
            }
        });

        buttonAverage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                double number1 = Double.parseDouble(editTextNumber1.getText().toString());
                double number2 = Double.parseDouble(editTextNumber2.getText().toString());

                double result = (number1 + number2) / 2;

                Intent intent = new Intent(MainActivity.this, ResultActivity.class);
                intent.putExtra("result", result);
                startActivity(intent);
            }
        });
    }
}

activity_result.xml

<LinearLayout
    ...
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    ...>

    <TextView
        android:id="@+id/textViewResult"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:textSize="24sp"
        tools:text="Result will be displayed here"/>
</LinearLayout>

ResultActivity.java

import android.content.Intent;
import android.os.Bundle;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class ResultActivity extends AppCompatActivity {
    private TextView textViewResult;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_result);

        textViewResult = findViewById(R.id.textViewResult);

        Intent intent = getIntent();
        int result = intent.getIntExtra("result", 0);
        textViewResult.setText("Result: " + result);
    }
}

activity_result.xml

import android.content.Intent;
import android.os.Bundle;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class ResultActivity extends AppCompatActivity {
    private TextView textViewResult;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_result);

        textViewResult = findViewById(R.id.textViewResult);

        Intent intent = getIntent();
        int result = intent.getIntExtra("result", 0);
        textViewResult.setText("Result: " + result);
    }
}




B) Create an Android Application to perform following string operation according to user selection of
radio button.

SOLUTION:
Activity.java:
package com.example.slip3_2;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.*;
public class MainActivity extends AppCompatActivity {
private EditText inputEditText;
private RadioButton upperCaseRadioButton;
private RadioButton lowerCaseRadioButton;
private RadioButton rightFiveRadioButton;
private RadioButton leftFiveRadioButton;
private Button submitButton;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
inputEditText = findViewById(R.id.input_edit_text);
upperCaseRadioButton = findViewById(R.id.upper_case_radio_button);
lowerCaseRadioButton = findViewById(R.id.lower_case_radio_button);
rightFiveRadioButton = findViewById(R.id.right_five_radio_button);
leftFiveRadioButton = findViewById(R.id.left_five_radio_button);
submitButton = findViewById(R.id.submit_button);
submitButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
String inputString = inputEditText.getText().toString();
if (upperCaseRadioButton.isChecked()) {
Intent intent = new Intent(MainActivity.this,
ResultActivity.class);
intent.putExtra("result", inputString.toUpperCase());
intent.putExtra("operation", "uppercase");
startActivity(intent);
} else if (lowerCaseRadioButton.isChecked()) {
Intent intent = new Intent(MainActivity.this,
ResultActivity.class);
intent.putExtra("result", inputString.toLowerCase());
intent.putExtra("operation", "lowercase");
startActivity(intent);
} else if (rightFiveRadioButton.isChecked()) {
Intent intent = new Intent(MainActivity.this,
ResultActivity.class);
if (inputString.length() > 5) {
intent.putExtra("result",
inputString.substring(inputString.length() - 5));
} else {
intent.putExtra("result", inputString);
}
intent.putExtra("operation", "right5");
startActivity(intent);
} else if (leftFiveRadioButton.isChecked()) {
Intent intent = new Intent(MainActivity.this,
ResultActivity.class);
if (inputString.length() > 5) {
intent.putExtra("result", inputString.substring(0,
5));
}
}
});
} else {
intent.putExtra("result", inputString);
}
intent.putExtra("operation", "left5");
startActivity(intent);
}
}
});
}
}
Activity.xml :
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools">
<application
android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules"
android:fullBackupContent="@xml/backup_rules"
android:icon="@mipmap/ic_launcher"
android:label="@string/app_name"
android:supportsRtl="true"
android:theme="@style/Theme.Slip3_2"
tools:targetApi="31">
<activity
android:name=".ResultActivity"
android:exported="false" />
<activity
android:name=".MainActivity"
android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNCHER" />
</intent-filter>
</activity>
</application>
</manifest>


Q.2 A)Write a C program to find file properties such as inode number, number of hard link, File
permissions, File size, File access and modification time and so on of a given file using stat() system
call.

SOLUTION:
#include <sys/types.h>
#include <sys/stat.h>
#include <time.h>
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[]) {
struct stat info;

if (argc != 2) {
printf("Enter filename\n");
}

if (stat(argv[1], &info) == -1) {
printf("stat erro");
exit(EXIT_FAILURE);
}
printf("I-node number: %ld\n", (long) info.st_ino);
printf("File size: %lld bytes\n",(long long) info.st_size);
printf("Last file access: %s", ctime(&info.st_atime));
printf("Last file modification:   %s", ctime(&info.st_mtime));
printf("No of hard links: %d\n",info.st_nlink);
printf("File Permissions: \t");

printf( (info.st_mode & S_IRUSR) ? "r" : "-");
printf( (info.st_mode & S_IWUSR) ? "w" : "-");
printf( (info.st_mode & S_IXUSR) ? "x" : "-");
printf( (info.st_mode & S_IRGRP) ? "r" : "-");
printf( (info.st_mode & S_IWGRP) ? "w" : "-");
printf( (info.st_mode & S_IXGRP) ? "x" : "-");
printf( (info.st_mode & S_IROTH) ? "r" : "-");
printf( (info.st_mode & S_IWOTH) ? "w" : "-");
printf( (info.st_mode & S_IXOTH) ? "x" : "-");

putchar('\n');
}


B) Write a C program to create ‘n’ child processes. When all ‘n’ child processes terminates, Display total
cumulative time children spent in user and kernel mode.

SOLUTION:

#include<sys/types.h>
#include<sys/wait.h>
#include<unistd.h>
#include<time.h>
#include<sys/times.h>
#include<stdio.h>
#include<stdlib.h>
int main(void)
{
int i, status;
pid_t pid;
time_t currentTime;
struct tms cpuTime;
if((pid = fork())==-1) //start child process
{
perror("\nfork error");
exit(EXIT_FAILURE);
}
else if(pid==0) //child process
{
time(&currentTime);
printf("\nChild process started at %s",ctime(&currentTime));
for(i=0;i<5;i++)
{
printf("\nCounting= %dn",i); //count for 5 seconds
sleep(1);
}
time(&currentTime);
printf("\nChild process ended at %s",ctime(&currentTime));
exit(EXIT_SUCCESS);
}
else
{ //Parent process
time(&currentTime); // gives normal time
printf("\nParent process started at %s ",ctime(&currentTime));
if(wait(&status)== -1) //wait for child process
perror("\n wait error");
if(WIFEXITED(status))
printf("\nChild process ended normally");
else
printf("\nChild process did not end normally");
if(times(&cpuTime)<0) //Get process time
perror("\nTimes error");
else
{ // _SC_CLK_TCK: system configuration time: seconds clock tick
printf("\nParent process user time= %fn",((double)
cpuTime.tms_utime));
printf("\nParent process system time = %fn",((double)
cpuTime.tms_stime));
printf("\nChild process user time = %fn",((double)
cpuTime.tms_cutime));
printf("\nChild process system time = %fn",((double)
cpuTime.tms_cstime));
}
time(&currentTime);
printf("\nParent process ended at %s",ctime(&currentTime));
exit(EXIT_SUCCESS);
}
}